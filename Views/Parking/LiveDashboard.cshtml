@model ParkIRC.ViewModels.LiveDashboardViewModel
@{
    ViewData["Title"] = "Live Dashboard";
}

@section Styles {
    <link rel="stylesheet" href="~/css/live-dashboard.css" />
    <style>
        .action-card {
            transition: all 0.3s ease;
            margin-bottom: 15px;
            height: 100%;
        }
        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        .recent-activity {
            max-height: 400px;
            overflow-y: auto;
        }
        .stats-card {
            border-left: 4px solid;
            margin-bottom: 15px;
        }
        .stats-card.primary { border-color: #4e73df; }
        .stats-card.success { border-color: #1cc88a; }
        .stats-card.warning { border-color: #f6c23e; }
        .stats-card.danger { border-color: #e74a3b; }
        
        /* Enhanced responsive styles */
        @@media (max-width: 768px) {
            .py-4 { padding-top: 0.75rem !important; padding-bottom: 0.75rem !important; }
            .mb-4 { margin-bottom: 0.75rem !important; }
            .card-header { padding: 0.5rem 1rem; }
            .card-body { padding: 0.75rem; }
            .action-card .card-body { padding: 0.75rem; }
            .btn { padding: 0.25rem 0.5rem; font-size: 0.875rem; }
            h5.mb-0 { font-size: 1rem; }
            .stats-card h2 { font-size: 1.25rem; }
            .card-title { font-size: 0.85rem; }
            .table { font-size: 0.85rem; }
            .table td, .table th { padding: 0.5rem; }
            #simulation-log { height: 100px; }
        }
        
        @@media (max-width: 576px) {
            .py-4 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }
            .mb-4 { margin-bottom: 0.5rem !important; }
            .g-3 { --bs-gutter-y: 0.5rem; }
            .simulate-push-button { width: 100%; margin-bottom: 0.5rem; }
            .card-header h5 { font-size: 0.9rem; }
            .action-card .card-body i { font-size: 2rem !important; margin-bottom: 0.5rem !important; }
            .action-card h5 { font-size: 0.9rem; margin-bottom: 0.5rem; }
            .btn-light { padding: 0.25rem 0.5rem; font-size: 0.75rem; }
        }
    </style>
}

<div class="container-fluid mt-2 mt-md-4">
    <!-- Quick Actions -->
    <div class="row mb-3 mb-md-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6 col-md-3 mb-2 mb-md-0">
                            <div class="action-card card h-100 bg-success text-white">
                                <div class="card-body text-center">
                                    <i class="fas fa-car-side fa-2x fa-md-3x mb-2 mb-md-3"></i>
                                    <h5>Kendaraan Masuk</h5>
                                    <button class="btn btn-light mt-1 mt-md-2" onclick="showVehicleEntryModal()">
                                        <i class="fas fa-plus"></i> Catat Masuk
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-3 mb-2 mb-md-0">
                            <div class="action-card card h-100 bg-danger text-white">
                                <div class="card-body text-center">
                                    <i class="fas fa-car fa-2x fa-md-3x mb-2 mb-md-3"></i>
                                    <h5>Kendaraan Keluar</h5>
                                    <button class="btn btn-light mt-1 mt-md-2" onclick="showVehicleExitModal()">
                                        <i class="fas fa-minus"></i> Catat Keluar
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-3 mb-2 mb-md-0">
                            <div class="action-card card h-100 bg-info text-white">
                                <div class="card-body text-center">
                                    <i class="fas fa-history fa-2x fa-md-3x mb-2 mb-md-3"></i>
                                    <h5>Riwayat</h5>
                                    <button class="btn btn-light mt-1 mt-md-2" onclick="showHistoryModal()">
                                        <i class="fas fa-search"></i> Lihat Riwayat
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="action-card card h-100 bg-warning text-white">
                                <div class="card-body text-center">
                                    <i class="fas fa-print fa-2x fa-md-3x mb-2 mb-md-3"></i>
                                    <h5>Cetak Laporan</h5>
                                    <button class="btn btn-light mt-1 mt-md-2" onclick="showReportModal()">
                                        <i class="fas fa-file-pdf"></i> Cetak
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Simulation Panel -->
    <div class="row mb-3 mb-md-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0"><i class="fas fa-cogs me-2"></i>Simulasi Push Button</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12 col-md-6 mb-2 mb-md-0">
                            <p class="small mb-2">Gunakan simulasi push button untuk menguji sistem tanpa hardware fisik:</p>
                            <button class="btn btn-primary simulate-push-button">
                                <i class="fas fa-hand-pointer me-2"></i> Simulasi Push Button
                            </button>
                        </div>
                        <div class="col-12 col-md-6">
                            <div id="simulation-log" class="bg-light p-2 rounded" style="height: 150px; overflow-y: auto;">
                                <p class="text-muted small">Log simulasi akan muncul di sini...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-3 mb-md-4">
        <div class="col-6 col-md-3">
            <div class="card stats-card primary h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-primary mb-1 mb-md-2">Total</h6>
                            <h2 class="mb-0 total-spaces">@Model.TotalSpaces</h2>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-parking fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card stats-card success h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-success mb-1 mb-md-2">Available</h6>
                            <h2 class="mb-0 available-spaces">@Model.AvailableSpaces</h2>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card stats-card warning h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-warning mb-1 mb-md-2">Occupied</h6>
                            <h2 class="mb-0 occupied-spaces">@Model.OccupiedSpaces</h2>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-car fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card stats-card danger h-100">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="text-danger mb-1 mb-md-2">Revenue</h6>
                            <h2 class="mb-0 today-revenue">Rp @Model.TodayRevenue.ToString("N0")</h2>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-money-bill-wave fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Recent Activities -->
        <div class="col-lg-8 mb-3 mb-lg-0">
            <div class="card shadow h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Recent Activities</h5>
                    <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-primary active" onclick="filterActivities('all')">All</button>
                        <button type="button" class="btn btn-sm btn-outline-success" onclick="filterActivities('entry')">Entry</button>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="filterActivities('exit')">Exit</button>
                    </div>
                </div>
                <div class="card-body p-0 p-md-3">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Time</th>
                                    <th>Vehicle</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="activityTableBody">
                                @foreach (var activity in Model.RecentActivities)
                                {
                                    <tr class="activity-row @(activity.Status.ToLower())-activity">
                                        <td>@activity.EntryTime.ToString("HH:mm:ss")</td>
                                        <td>@activity.VehicleNumber</td>
                                        <td>@activity.VehicleType</td>
                                        <td>
                                            <span class="badge bg-@(activity.Status == "Exit" ? "danger" : "success")">
                                                @activity.Status
                                            </span>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-info" onclick="viewDetails('@activity.VehicleNumber')">
                                                <i class="fas fa-info-circle"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Space Availability -->
        <div class="col-lg-4">
            <div class="card shadow h-100">
                <div class="card-header">
                    <h5 class="mb-0">Space Availability</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6 class="mb-2">Occupancy Rate</h6>
                        <div class="progress" style="height: 25px;">
                            @{
                                int occupancyRate = Model.TotalSpaces > 0 
                                    ? (int)((double)Model.OccupiedSpaces / Model.TotalSpaces * 100) 
                                    : 0;
                                
                                string progressClass = occupancyRate < 50 
                                    ? "bg-success" 
                                    : occupancyRate < 80 
                                        ? "bg-warning" 
                                        : "bg-danger";
                            }
                            <div class="progress-bar @progressClass" 
                                 role="progressbar" 
                                 style="width: @occupancyRate%;" 
                                 aria-valuenow="@occupancyRate" 
                                 aria-valuemin="0" 
                                 aria-valuemax="100">
                                @occupancyRate%
                            </div>
                        </div>
                    </div>
                    
                    <div>
                        <h6 class="mb-2">Vehicle Distribution</h6>
                        <canvas id="vehicleDistributionChart" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Vehicle Modal templates -->
@{
    var vehicleEntryModel = new ParkIRC.ViewModels.VehicleEntryViewModel();
    var vehicleExitModel = new ParkIRC.ViewModels.VehicleExitViewModel();
    var historyModel = new ParkIRC.ViewModels.HistoryViewModel();
}
<partial name="_VehicleEntryModal" model="vehicleEntryModel" />
<partial name="_VehicleExitModal" model="vehicleExitModel" />
<partial name="_HistoryModal" model="historyModel" />

<!-- Report Modal -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportModalLabel">Generate Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reportForm">
                    <div class="mb-3">
                        <label for="reportType" class="form-label">Report Type</label>
                        <select class="form-select" id="reportType" required>
                            <option value="">-- Select Report Type --</option>
                            <option value="daily">Daily Report</option>
                            <option value="weekly">Weekly Report</option>
                            <option value="monthly">Monthly Report</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="reportDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="reportDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="reportFormat" class="form-label">Format</label>
                        <select class="form-select" id="reportFormat" required>
                            <option value="pdf">PDF</option>
                            <option value="excel">Excel</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="generateReportBtn">Generate</button>
            </div>
        </div>
    </div>
</div>

<!-- Error alert template (hidden) -->
<div class="alert alert-danger alert-dismissible fade d-none" role="alert" id="errorAlert">
    <strong>Error!</strong> <span id="errorMessage"></span>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/live-dashboard.js"></script>
    <script>
        // Initialize vehicle distribution chart with responsive options
        const ctx = document.getElementById('vehicleDistributionChart').getContext('2d');
        const vehicleChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Car', 'Motorcycle', 'Truck', 'Other'],
                datasets: [{
                    data: [@Model.CarCount, @Model.MotorcycleCount, @Model.TruckCount, @Model.OtherCount],
                    backgroundColor: [
                        '#4e73df',
                        '#1cc88a',
                        '#f6c23e',
                        '#36b9cc'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: window.innerWidth < 768 ? 'bottom' : 'right',
                        labels: {
                            boxWidth: window.innerWidth < 768 ? 12 : 20,
                            font: {
                                size: window.innerWidth < 768 ? 10 : 12
                            }
                        }
                    },
                    tooltip: {
                        bodyFont: {
                            size: window.innerWidth < 768 ? 10 : 12
                        },
                        titleFont: {
                            size: window.innerWidth < 768 ? 11 : 13
                        }
                    }
                },
                cutout: window.innerWidth < 576 ? '50%' : '60%'
            }
        });

        // Global functions
        function showVehicleEntryModal() {
            const modal = new bootstrap.Modal(document.getElementById('vehicleEntryModal'));
            modal.show();
        }

        function showVehicleExitModal() {
            const modal = new bootstrap.Modal(document.getElementById('vehicleExitModal'));
            modal.show();
        }

        function showHistoryModal() {
            const modal = new bootstrap.Modal(document.getElementById('historyModal'));
            modal.show();
        }

        function showReportModal() {
            const modal = new bootstrap.Modal(document.getElementById('reportModal'));
            modal.show();
        }

        // Handle window resize for chart responsiveness
        window.addEventListener('resize', () => {
            vehicleChart.options.plugins.legend.position = window.innerWidth < 768 ? 'bottom' : 'right';
            vehicleChart.options.plugins.legend.labels.boxWidth = window.innerWidth < 768 ? 12 : 20;
            vehicleChart.options.plugins.legend.labels.font.size = window.innerWidth < 768 ? 10 : 12;
            vehicleChart.options.cutout = window.innerWidth < 576 ? '50%' : '60%';
            vehicleChart.update();
        });

        // Filter activities
        function filterActivities(type) {
            const buttons = document.querySelectorAll('.btn-group .btn');
            buttons.forEach(btn => btn.classList.remove('active'));
            
            const clickedButton = document.querySelector(`.btn-group .btn[onclick="filterActivities('${type}')"]`);
            clickedButton.classList.add('active');
            
            const rows = document.querySelectorAll('.activity-row');
            
            if (type === 'all') {
                rows.forEach(row => row.style.display = '');
            } else {
                rows.forEach(row => {
                    const isMatchingType = row.classList.contains(`${type}-activity`);
                    row.style.display = isMatchingType ? '' : 'none';
                });
            }
        }

        // Generate report
        document.getElementById('generateReportBtn').addEventListener('click', function() {
            const form = document.getElementById('reportForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const reportType = document.getElementById('reportType').value;
            const reportDate = document.getElementById('reportDate').value;
            const reportFormat = document.getElementById('reportFormat').value;

            window.location.href = `/Report/Generate?type=${reportType}&date=${reportDate}&format=${reportFormat}`;
            
            const modal = bootstrap.Modal.getInstance(document.getElementById('reportModal'));
            modal.hide();
        });
        
        // Initialize with proper sizes for mobile
        if (window.innerWidth < 768) {
            const icons = document.querySelectorAll('.action-card .card-body i');
            icons.forEach(icon => {
                icon.classList.remove('fa-3x');
                icon.classList.add('fa-2x');
            });
        }
    </script>
} 