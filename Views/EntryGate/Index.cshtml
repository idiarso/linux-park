@using ParkIRC.Models.ViewModels
@model EntryGateMonitoringViewModel
@{
    ViewData["Title"] = "Entry Gate Monitoring";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0"><i class="fas fa-door-open me-2"></i> Entry Gate Monitoring</h4>
                        <a href="javascript:void(0)" class="btn btn-sm btn-light" id="refresh-gates">
                            <i class="fas fa-sync-alt me-1"></i> Refresh
                        </a>
                    </div>
                </div>
                
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Entry Gates Status</h5>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Gate Name</th>
                                            <th>Status</th>
                                            <th>Gate</th>
                                            <th>Today's Traffic</th>
                                            <th>Last Activity</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var gate in Model.EntryGates)
                                        {
                                            <tr>
                                                <td>@gate.Name</td>
                                                <td>
                                                    @if (gate.IsOnline)
                                                    {
                                                        <span class="badge bg-success">Online</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">Offline</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (gate.IsOpen)
                                                    {
                                                        <span class="badge bg-warning">Open</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Closed</span>
                                                    }
                                                </td>
                                                <td>@gate.VehiclesProcessed vehicles</td>
                                                <td>@(gate.LastActivity?.ToString("HH:mm:ss") ?? "N/A")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <h5>Recent Entries</h5>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Ticket #</th>
                                            <th>Vehicle</th>
                                            <th>Entry Time</th>
                                            <th>Gate</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var transaction in Model.RecentTransactions)
                                        {
                                            <tr>
                                                <td>@transaction.TicketNumber</td>
                                                <td>
                                                    @transaction.VehicleNumber
                                                    <small class="text-muted">(@transaction.VehicleType)</small>
                                                </td>
                                                <td>@transaction.EntryTime.ToString("HH:mm:ss")</td>
                                                <td>@transaction.EntryPoint</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Push Button Status</h5>
                            <div class="card bg-light">
                                <div class="card-body">
                                    <div id="push-button-status">
                                        <!-- Will be updated by JavaScript -->
                                        <div class="text-center">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                            <p class="mt-2">Loading push button status...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Tambahkan tabel riwayat kendaraan terparkir -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header bg-success text-white">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">
                                            <i class="fas fa-car me-2"></i> Riwayat Kendaraan Terparkir
                                            <span class="badge bg-light text-dark ms-2" id="vehicle-counter">0</span>
                                        </h5>
                                        <div>
                                            <button class="btn btn-sm btn-light" id="refresh-history">
                                                <i class="fas fa-sync-alt me-1"></i> Refresh
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-parking-history">
                                            <thead>
                                                <tr>
                                                    <th>Ticket Number</th>
                                                    <th>Nomor Kendaraan</th>
                                                    <th>Jenis</th>
                                                    <th>Waktu Masuk</th>
                                                    <th>Lokasi Parkir</th>
                                                    <th>Status</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!-- Riwayat kendaraan akan diperbarui oleh JavaScript -->
                                                <tr class="text-center">
                                                    <td colspan="6" class="py-4">
                                                        <i class="fas fa-parking fa-3x text-muted mb-3"></i>
                                                        <p class="text-muted">Belum ada kendaraan masuk</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            @if (User.IsInRole("Admin"))
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h4 class="mb-0">Test Entry Simulation</h4>
                    </div>
                    <div class="card-body">
                        <p>Use this panel to test the entry gate system without physical hardware.</p>
                        
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i> <strong>Note:</strong> Simulating a push button will:
                            <ul class="mb-0 mt-2">
                                <li>Generate a random ticket number</li>
                                <li>Process a simulated vehicle entry</li>
                                <li>Automatically generate and print a ticket receipt</li>
                                <li>Display a ticket preview that can be printed</li>
                                <li>Open the simulated entry gate</li>
                            </ul>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header bg-info text-white">
                                        <h5 class="mb-0">Simulate Push Button</h5>
                                    </div>
                                    <div class="card-body">
                                        <p>Select an entry gate and press the button to simulate a push button event:</p>
                                        
                                        <div class="form-group mb-3">
                                            <label for="entry-gate-select">Entry Gate:</label>
                                            <select id="entry-gate-select" class="form-control">
                                                @foreach (var gate in Model.EntryGates)
                                                {
                                                    <option value="@gate.Id">@gate.Name</option>
                                                }
                                            </select>
                                        </div>
                                        
                                        <button id="simulate-push-button" class="btn btn-primary">
                                            <i class="fas fa-hand-pointer me-2"></i> Simulate Push Button
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header bg-secondary text-white">
                                        <h5 class="mb-0">System Response</h5>
                                    </div>
                                    <div class="card-body">
                                        <div id="simulation-log" class="bg-light p-3" style="height: 200px; overflow-y: auto;">
                                            <p class="text-muted">System logs will appear here...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr/signalr.min.js"></script>
    <script src="~/js/entry-gate-monitoring.js"></script>
    <script>
        // Inisialisasi objek entryGateMonitoring setelah dokumen dimuat
        document.addEventListener('DOMContentLoaded', function() {
            entryGateMonitoring.init();
            
            // Setup event handler untuk refresh riwayat kendaraan
            const refreshHistoryBtn = document.getElementById('refresh-history');
            if (refreshHistoryBtn) {
                refreshHistoryBtn.addEventListener('click', function() {
                    // Kirim permintaan ke server untuk mendapatkan data terbaru
                    fetch('/EntryGate/GetActiveVehicles')
                        .then(response => response.json())
                        .then(data => {
                            // Update tabel dengan data terbaru
                            const parkingHistoryTable = document.querySelector('table.table-parking-history tbody');
                            if (parkingHistoryTable) {
                                if (data.length > 0) {
                                    parkingHistoryTable.innerHTML = '';
                                    
                                    data.forEach(vehicle => {
                                        const row = document.createElement('tr');
                                        row.innerHTML = `
                                            <td>${vehicle.ticketNumber}</td>
                                            <td>${vehicle.vehicleNumber}</td>
                                            <td>${vehicle.vehicleType}</td>
                                            <td>${new Date(vehicle.entryTime).toLocaleTimeString()}</td>
                                            <td>${vehicle.parkingSpaceNumber || 'Unknown'}</td>
                                            <td><span class="badge bg-success">Active</span></td>
                                        `;
                                        parkingHistoryTable.appendChild(row);
                                    });
                                    
                                    // Update counter
                                    const vehicleCounter = document.getElementById('vehicle-counter');
                                    if (vehicleCounter) {
                                        vehicleCounter.textContent = data.length.toString();
                                    }
                                }
                            }
                        })
                        .catch(error => console.error('Error fetching vehicle data:', error));
                });
            }
        });

        // SignalR Connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/parkingHub")
            .withAutomaticReconnect()
            .build();

        connection.start().catch(err => console.error(err));

        // Notify when a vehicle enters
        connection.on("NotifyVehicleEntry", function(vehicleNumber) {
            console.log(`Vehicle entered: ${vehicleNumber}`);
            // Additional UI update logic here
        });

        // Example function to notify vehicle entry
        async function notifyVehicleEntry(vehicleNumber) {
            try {
                await connection.invoke("NotifyVehicleEntry", vehicleNumber);
            } catch (err) {
                console.error(err);
            }
        }
    </script>
}