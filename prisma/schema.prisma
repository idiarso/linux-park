generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  Id           Int            @id(map: "PK_User") @default(autoincrement())
  Username     String         @unique(map: "IX_User_Username")
  Email        String
  PasswordHash String
  FullName     String
  IsActive     Boolean
  CreatedAt    DateTime       @db.Timestamp(6)
  LastLoginAt  DateTime?      @db.Timestamp(6)
  AccessTokens AccessTokens[]
  RoleUser     RoleUser[]
}

model AccessTokens {
  Id          Int      @id(map: "PK_AccessTokens") @default(autoincrement())
  Token       String
  UserId      String
  Permissions String
  CreatedAt   DateTime @db.Timestamp(6)
  ExpiresAt   DateTime @db.Timestamp(6)
  IsRevoked   Boolean
  DeviceId    String
  IpAddress   String
  UserAgent   String
  UserId1     Int
  User        User     @relation(fields: [UserId1], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AccessTokens_User_UserId1")

  @@index([UserId1], map: "IX_AccessTokens_UserId1")
}

model AspNetRoleClaims {
  Id          Int         @id(map: "PK_AspNetRoleClaims") @default(autoincrement())
  RoleId      String
  ClaimType   String?
  ClaimValue  String?
  AspNetRoles AspNetRoles @relation(fields: [RoleId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetRoleClaims_AspNetRoles_RoleId")

  @@index([RoleId], map: "IX_AspNetRoleClaims_RoleId")
}

model AspNetRoles {
  Id               String             @id(map: "PK_AspNetRoles")
  Name             String?            @db.VarChar(256)
  NormalizedName   String?            @unique(map: "RoleNameIndex") @db.VarChar(256)
  ConcurrencyStamp String?
  AspNetRoleClaims AspNetRoleClaims[]
  AspNetUserRoles  AspNetUserRoles[]
}

model AspNetUserClaims {
  Id          Int         @id(map: "PK_AspNetUserClaims") @default(autoincrement())
  UserId      String
  ClaimType   String?
  ClaimValue  String?
  AspNetUsers AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserClaims_AspNetUsers_UserId")

  @@index([UserId], map: "IX_AspNetUserClaims_UserId")
}

model AspNetUserLogins {
  LoginProvider       String
  ProviderKey         String
  ProviderDisplayName String?
  UserId              String
  AspNetUsers         AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserLogins_AspNetUsers_UserId")

  @@id([LoginProvider, ProviderKey], map: "PK_AspNetUserLogins")
  @@index([UserId], map: "IX_AspNetUserLogins_UserId")
}

model AspNetUserRoles {
  UserId      String
  RoleId      String
  AspNetRoles AspNetRoles @relation(fields: [RoleId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserRoles_AspNetRoles_RoleId")
  AspNetUsers AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserRoles_AspNetUsers_UserId")

  @@id([UserId, RoleId], map: "PK_AspNetUserRoles")
  @@index([RoleId], map: "IX_AspNetUserRoles_RoleId")
}

model AspNetUserTokens {
  UserId        String
  LoginProvider String
  Name          String
  Value         String?
  AspNetUsers   AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserTokens_AspNetUsers_UserId")

  @@id([UserId, LoginProvider, Name], map: "PK_AspNetUserTokens")
}

model AspNetUsers {
  Id                   String             @id(map: "PK_AspNetUsers")
  Name                 String             @db.VarChar(100)
  Email                String             @db.VarChar(256)
  PhoneNumber          String?
  IsActive             Boolean
  CreatedAt            DateTime           @db.Timestamp(6)
  LastModifiedAt       DateTime?          @db.Timestamp(6)
  LastModifiedBy       String?
  FullName             String
  BadgeNumber          String?
  JoinDate             DateTime           @db.Timestamp(6)
  PhotoPath            String?
  UserName             String?            @db.VarChar(256)
  NormalizedUserName   String?            @unique(map: "UserNameIndex") @db.VarChar(256)
  NormalizedEmail      String?            @db.VarChar(256)
  EmailConfirmed       Boolean
  PasswordHash         String?
  SecurityStamp        String?
  ConcurrencyStamp     String?
  PhoneNumberConfirmed Boolean
  TwoFactorEnabled     Boolean
  LockoutEnd           DateTime?          @db.Timestamptz(6)
  LockoutEnabled       Boolean
  AccessFailedCount    Int
  AspNetUserClaims     AspNetUserClaims[]
  AspNetUserLogins     AspNetUserLogins[]
  AspNetUserRoles      AspNetUserRoles[]
  AspNetUserTokens     AspNetUserTokens[]
  Journals             Journals[]
  OperatorShifts       OperatorShifts[]
  ParkingTickets       ParkingTickets[]

  @@index([NormalizedEmail], map: "EmailIndex")
}

model CameraSettings {
  Id                Int       @id(map: "PK_CameraSettings") @default(autoincrement())
  ProfileName       String
  ResolutionWidth   Int
  ResolutionHeight  Int
  ROI_X             Int
  ROI_Y             Int
  ROI_Width         Int
  ROI_Height        Int
  Exposure          Int
  Gain              Float
  Brightness        Int
  Contrast          Int
  LightingCondition String    @default("Normal")
  IsActive          Boolean
  CreatedAt         DateTime  @db.Timestamp(6)
  ModifiedAt        DateTime? @db.Timestamp(6)
  Cameras           Cameras[]
}

model Cameras {
  Id             String         @id(map: "PK_Cameras")
  Name           String
  Location       String
  Type           String
  Status         String
  IsActive       Boolean
  Resolution     String
  ImageFormat    String
  FrameRate      Int
  Configuration  String
  LastChecked    DateTime       @db.Timestamp(6)
  LastError      String
  CreatedBy      String
  CreatedAt      DateTime       @db.Timestamp(6)
  LastModifiedBy String
  LastModifiedAt DateTime       @db.Timestamp(6)
  DeviceId       Int
  SettingsId     Int
  CameraSettings CameraSettings @relation(fields: [SettingsId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Cameras_CameraSettings_SettingsId")
  Devices        Devices        @relation(fields: [DeviceId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Cameras_Devices_DeviceId")

  @@index([DeviceId], map: "IX_Cameras_DeviceId")
  @@index([SettingsId], map: "IX_Cameras_SettingsId")
}

model DeviceConfigs {
  Id             Int      @id(map: "PK_DeviceConfigs") @default(autoincrement())
  Name           String
  DeviceType     String
  ConfigKey      String
  ConfigValue    String
  Description    String
  IsActive       Boolean
  IsBackup       Boolean
  CreatedAt      DateTime @db.Timestamp(6)
  CreatedBy      String
  LastModifiedAt DateTime @db.Timestamp(6)
  LastModifiedBy String
  DeviceId       Int
  Devices        Devices  @relation(fields: [DeviceId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_DeviceConfigs_Devices_DeviceId")

  @@index([DeviceId], map: "IX_DeviceConfigs_DeviceId")
}

model Devices {
  Id             Int             @id(map: "PK_Devices") @default(autoincrement())
  DeviceId       String
  Token          String
  Name           String
  Type           String
  SerialNumber   String
  IpAddress      String
  Port           Int
  Status         String
  Location       String
  ConnectionType String
  Configuration  String
  IsActive       Boolean
  LastChecked    DateTime        @db.Timestamp(6)
  LastSeen       DateTime        @db.Timestamp(6)
  LastError      String
  CreatedBy      String
  CreatedAt      DateTime        @db.Timestamp(6)
  LastModifiedBy String
  LastModifiedAt DateTime        @db.Timestamp(6)
  Cameras        Cameras[]
  DeviceConfigs  DeviceConfigs[]
  LoopDetectors  LoopDetectors[]
}

model EntryGates {
  Id               Int       @id(map: "PK_EntryGates") @default(autoincrement())
  Name             String    @db.VarChar(50)
  Location         String    @db.VarChar(255)
  IsActive         Boolean   @default(true)
  IsOnline         Boolean
  IsOpen           Boolean
  LastActivityTime DateTime  @db.Timestamp(6)
  LastActivity     DateTime? @db.Timestamp(6)
  IpAddress        String    @db.VarChar(100)
  PortNumber       Int
  Description      String
}

model HardwareStatuses {
  Id                   Int       @id(map: "PK_HardwareStatuses") @default(autoincrement())
  DeviceType           String
  DeviceName           String
  Status               String
  LastChecked          DateTime  @db.Timestamp(6)
  LastError            String?
  ErrorCount           Int
  IsOnline             Boolean
  IsBackupActive       Boolean
  BackupDeviceName     String?
  LastBackupSwitch     DateTime? @db.Timestamp(6)
  IsCameraOnline       Boolean
  IsGateOnline         Boolean
  IsPrinterOnline      Boolean
  IsLoopDetectorOnline Boolean
  DeviceId             String
}

model Journals {
  Id          Int         @id(map: "PK_Journals") @default(autoincrement())
  Action      String
  Description String
  Timestamp   DateTime    @db.Timestamp(6)
  OperatorId  String
  AspNetUsers AspNetUsers @relation(fields: [OperatorId], references: [Id], onUpdate: NoAction, map: "FK_Journals_AspNetUsers_OperatorId")

  @@index([OperatorId], map: "IX_Journals_OperatorId")
}

model LoopDetectors {
  Id                 String   @id(map: "PK_LoopDetectors")
  Name               String
  Location           String
  Type               String
  Status             String
  IsOccupied         Boolean
  IsActive           Boolean
  SensitivityLevel   Int
  DetectionThreshold Int
  Configuration      String
  LastChecked        DateTime @db.Timestamp(6)
  LastError          String
  CreatedBy          String
  CreatedAt          DateTime @db.Timestamp(6)
  LastModifiedBy     String
  LastModifiedAt     DateTime @db.Timestamp(6)
  DeviceId           Int
  Devices            Devices  @relation(fields: [DeviceId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_LoopDetectors_Devices_DeviceId")

  @@index([DeviceId], map: "IX_LoopDetectors_DeviceId")
}

model OperatorShifts {
  OperatorsId String
  ShiftsId    Int
  AspNetUsers AspNetUsers @relation(fields: [OperatorsId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_OperatorShifts_AspNetUsers_OperatorsId")
  Shifts      Shifts      @relation(fields: [ShiftsId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_OperatorShifts_Shifts_ShiftsId")

  @@id([OperatorsId, ShiftsId], map: "PK_OperatorShifts")
  @@index([ShiftsId], map: "IX_OperatorShifts_ShiftsId")
}

model ParkingRateConfigurations {
  id                          Int                         @id(map: "PK_ParkingRateConfigurations")
  EffectiveTo                 DateTime?                   @db.Timestamp(6)
  LastUpdated                 DateTime                    @db.Timestamp(6)
  ConfigurationName           String
  Description                 String
  IsDefault                   Boolean
  ValidFrom                   DateTime                    @db.Timestamp(6)
  ValidTo                     DateTime?                   @db.Timestamp(6)
  AppliedBy                   String
  AppliedAt                   DateTime                    @db.Timestamp(6)
  parking_rate_configurations parking_rate_configurations @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ParkingRateConfigurations_parking_rate_configurations_id")
}

model ParkingSpaces {
  Id                  Int                   @id(map: "PK_ParkingSpaces") @default(autoincrement())
  SpaceNumber         String
  SpaceType           String
  IsOccupied          Boolean
  IsActive            Boolean
  LastOccupiedTime    DateTime?             @db.Timestamp(6)
  HourlyRate          Decimal               @db.Decimal(18, 2)
  Description         String?
  CurrentVehicleId    Int?                  @unique(map: "IX_ParkingSpaces_CurrentVehicleId")
  Vehicles            Vehicles?             @relation(fields: [CurrentVehicleId], references: [Id], onUpdate: NoAction, map: "FK_ParkingSpaces_Vehicles_CurrentVehicleId")
  ParkingTransactions ParkingTransactions[]
}

model ParkingTickets {
  Id               String       @id(map: "PK_ParkingTickets")
  TicketNumber     String
  BarcodeData      String
  QRCodeImage      String
  BarcodeImagePath String?
  IssueTime        DateTime     @db.Timestamp(6)
  EntryTime        DateTime     @db.Timestamp(6)
  ExitTime         DateTime?    @db.Timestamp(6)
  Amount           Decimal      @db.Decimal
  ScanTime         DateTime?    @db.Timestamp(6)
  IsUsed           Boolean
  VehicleId        Int?
  OperatorId       String?
  ShiftId          Int
  Status           String
  IssuedAt         DateTime     @db.Timestamp(6)
  IsValid          Boolean
  UsedAt           DateTime?    @db.Timestamp(6)
  LicensePlate     String
  EntryImagePath   String
  ExitImagePath    String
  IsPaid           Boolean
  CreatedAt        DateTime     @db.Timestamp(6)
  CreatedBy        String
  LastModifiedAt   DateTime?    @db.Timestamp(6)
  LastModifiedBy   String
  AspNetUsers      AspNetUsers? @relation(fields: [OperatorId], references: [Id], onUpdate: NoAction, map: "FK_ParkingTickets_AspNetUsers_OperatorId")
  Shifts           Shifts       @relation(fields: [ShiftId], references: [Id], onUpdate: NoAction, map: "FK_ParkingTickets_Shifts_ShiftId")
  Vehicles         Vehicles?    @relation(fields: [VehicleId], references: [Id], onDelete: Restrict, onUpdate: NoAction, map: "FK_ParkingTickets_Vehicles_VehicleId")

  @@index([OperatorId], map: "IX_ParkingTickets_OperatorId")
  @@index([ShiftId], map: "IX_ParkingTickets_ShiftId")
  @@index([VehicleId], map: "IX_ParkingTickets_VehicleId")
}

model ParkingTransactions {
  Id                String        @id(map: "PK_ParkingTransactions")
  TransactionNumber String
  TicketNumber      String        @unique(map: "IX_ParkingTransactions_TicketNumber")
  VehicleId         Int
  ParkingSpaceId    Int
  EntryTime         DateTime      @db.Timestamp(6)
  ExitTime          DateTime?     @db.Timestamp(6)
  HourlyRate        Decimal       @db.Decimal(18, 2)
  Amount            Decimal       @db.Decimal(18, 2)
  TotalAmount       Decimal       @db.Decimal(18, 2)
  PaymentAmount     Decimal       @db.Decimal(18, 2)
  PaymentStatus     String
  PaymentMethod     String
  PaymentTime       DateTime?     @db.Timestamp(6)
  Status            String
  OperatorId        String
  EntryPoint        String
  VehicleNumber     String
  VehicleType       String
  ImagePath         String
  VehicleImagePath  String
  IsOfflineEntry    Boolean
  IsManualEntry     Boolean
  ParkingSpaces     ParkingSpaces @relation(fields: [ParkingSpaceId], references: [Id], onUpdate: NoAction, map: "FK_ParkingTransactions_ParkingSpaces_ParkingSpaceId")
  Vehicles          Vehicles      @relation(fields: [VehicleId], references: [Id], onUpdate: NoAction, map: "FK_ParkingTransactions_Vehicles_VehicleId")

  @@index([ParkingSpaceId], map: "IX_ParkingTransactions_ParkingSpaceId")
  @@index([VehicleId], map: "IX_ParkingTransactions_VehicleId")
}

model PrinterConfigs {
  Id             String   @id(map: "PK_PrinterConfigs")
  Name           String
  Port           String
  IsActive       Boolean  @default(true)
  IpAddress      String
  TcpPort        Int?
  ConnectionType String   @default("Serial")
  Status         String   @default("Offline")
  LastChecked    DateTime @db.Timestamp(6)
}

model Role {
  Id          Int        @id(map: "PK_Role") @default(autoincrement())
  Name        String     @unique(map: "IX_Role_Name")
  Description String
  IsActive    Boolean
  CreatedAt   DateTime   @db.Timestamp(6)
  RoleUser    RoleUser[]
}

model RoleUser {
  RolesId Int
  UsersId Int
  Role    Role @relation(fields: [RolesId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_RoleUser_Role_RolesId")
  User    User @relation(fields: [UsersId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_RoleUser_User_UsersId")

  @@id([RolesId, UsersId], map: "PK_RoleUser")
  @@index([UsersId], map: "IX_RoleUser_UsersId")
}

model Shifts {
  Id             Int              @id(map: "PK_Shifts") @default(autoincrement())
  Name           String
  ShiftName      String
  Date           DateTime         @db.Timestamp(6)
  StartTime      DateTime         @db.Timestamp(6)
  EndTime        DateTime         @db.Timestamp(6)
  Description    String
  MaxOperators   Int
  IsActive       Boolean
  WorkDays       String
  CreatedAt      DateTime         @db.Timestamp(6)
  OperatorShifts OperatorShifts[]
  ParkingTickets ParkingTickets[]
  Vehicles       Vehicles[]
}

model SystemLogs {
  Id            Int      @id(map: "PK_SystemLogs") @default(autoincrement())
  Timestamp     DateTime @db.Timestamp(6)
  Level         String
  Message       String
  Exception     String?
  StackTrace    String?
  Source        String?
  UserId        String?
  RequestPath   String?
  RequestMethod String?
  UserAgent     String?
  IpAddress     String?
}

model Vehicles {
  Id                  Int                   @id(map: "PK_Vehicles") @default(autoincrement())
  VehicleNumber       String
  VehicleType         String
  TicketNumber        String
  VehicleTypeId       Int
  DriverName          String?
  PhoneNumber         String?
  ContactNumber       String?
  EntryTime           DateTime              @db.Timestamp(6)
  ExitTime            DateTime?             @db.Timestamp(6)
  IsParked            Boolean
  EntryImagePath      String?
  ExitImagePath       String?
  BarcodeImagePath    String?
  ParkingSpaceId      Int?
  ShiftId             Int?
  CreatedBy           String
  CreatedAt           DateTime              @db.Timestamp(6)
  IsActive            Boolean
  PlateNumber         String
  Status              String
  ExternalSystemId    String
  EntryGateId         String
  ExitGateId          String
  ParkingFee          Decimal?              @db.Decimal
  UpdatedAt           DateTime?             @db.Timestamp(6)
  is_lost             Boolean?              @default(false)
  is_paid             Boolean?              @default(false)
  is_valid            Boolean?              @default(true)
  is_parked           Boolean?              @default(true)
  ParkingSpaces       ParkingSpaces?
  ParkingTickets      ParkingTickets[]
  ParkingTransactions ParkingTransactions[]
  Shifts              Shifts?               @relation(fields: [ShiftId], references: [Id], onUpdate: NoAction, map: "FK_Vehicles_Shifts_ShiftId")

  @@index([ShiftId], map: "IX_Vehicles_ShiftId")
}

model parking_rate_configurations {
  id                        Int                        @id(map: "PK_parking_rate_configurations") @default(autoincrement())
  vehicle_type              String
  base_rate                 Decimal                    @db.Decimal
  hourly_rate               Decimal                    @db.Decimal
  daily_rate                Decimal                    @db.Decimal
  weekly_rate               Decimal                    @db.Decimal
  monthly_rate              Decimal                    @db.Decimal
  penalty_rate              Decimal                    @db.Decimal
  effective_from            DateTime                   @db.Timestamp(6)
  created_by                String
  created_at                DateTime                   @db.Timestamp(6)
  last_modified_by          String
  last_modified_at          DateTime                   @db.Timestamp(6)
  is_active                 Boolean
  motorcycle_rate           Decimal                    @db.Decimal
  car_rate                  Decimal                    @db.Decimal
  additional_hour_rate      Decimal                    @db.Decimal
  maximum_daily_rate        Decimal                    @db.Decimal
  updated_by                String
  ParkingRateConfigurations ParkingRateConfigurations?
}

model parking_settings {
  id                         Int       @id(map: "PK_parking_settings") @default(autoincrement())
  site_name                  String?
  logo_path                  String?
  favicon_path               String?
  footer_text                String?
  theme_color                String?
  show_logo                  Boolean?
  last_updated               DateTime? @db.Timestamp(6)
  updated_by                 String?
  postgres_connection_string String?
}

model CaptureTickets {
  Id           Int       @id @default(autoincrement())
  TicketNumber String    @db.VarChar(50)
  ImagePath    String    @db.VarChar(255)
  Timestamp    DateTime  @default(now()) @db.Timestamp(6)
  Status       String    @default("masuk") @db.VarChar(10)
  VehicleType  String?   @db.VarChar(20)
  PlateNumber  String?   @db.VarChar(15)
  ExitTimestamp DateTime? @db.Timestamp(6)
}

model VehicleExit {
  Id            Int      @id @default(autoincrement())
  TicketNumber  String   @db.VarChar(50)
  VehicleNumber String?  @db.VarChar(20)
  ExitTime      DateTime @default(now()) @db.Timestamp(6)
  PrintCount    Int?     @default(0)
  OperatorId    String?  @db.VarChar(50)
  Notes         String?
}

model EFMigrationsHistory {
  MigrationId    String @id(map: "PK___EFMigrationsHistory") @db.VarChar(150)
  ProductVersion String @db.VarChar(32)

  @@map("__EFMigrationsHistory")
}
